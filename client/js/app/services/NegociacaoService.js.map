{"version":3,"file":"NegociacaoService.js","names":["NegociacaoService","HttpService","negociacao","ConnectionFactory","getConnection","then","connection","NegociacaoDao","dao","adiciona","erro","console","log","Error","negociacoesLista","negociacoes","filter","some","listaNegociacoes","isEquals","apagaTodos","listaTodos","get","map","obj","Negociacao","Date","data","quantidade","qtd","valor","Promise","all","periodos","reduce","arrayAchatado","array","concat"],"sources":["../../app-es6/services/NegociacaoService.js"],"sourcesContent":["import { HttpService } from \"./HttpService.js\";\r\nimport { Negociacao } from \"../models/Negociacao.js\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory.js\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao.js\";\r\n\r\nexport class NegociacaoService {\r\n    #http;\r\n    constructor() {\r\n        this.#http = new HttpService();\r\n    }\r\n\r\n    #obterNegociacoesDaSemana() {\r\n\r\n        return this.#http.get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade || obj.qtd, obj.valor\r\n                ))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações da semana')\r\n            })\r\n    }\r\n\r\n    #obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this.#http.get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor\r\n                ))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações da semana anterior')\r\n            })\r\n    }\r\n\r\n    #obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this.#http.get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor\r\n                ))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada')\r\n            })\r\n    }\r\n\r\n    #obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.#obterNegociacoesDaSemana(),\r\n            this.#obterNegociacoesDaSemanaAnterior(),\r\n            this.#obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((arrayAchatado, array) => arrayAchatado.concat(array), []);\r\n\r\n            return negociacoes\r\n        })\r\n            .catch(erro => { throw new Error(erro) });\r\n    }\r\n\r\n    cadastrar(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao)\r\n                .then(() => 'Negociação adicionada com Sucesso'))\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            })\r\n    }\r\n\r\n    importar(negociacoesLista) {\r\n\r\n        return this.#obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !negociacoesLista.negociacao.some(listaNegociacoes => negociacao.isEquals(listaNegociacoes))))\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível importar as negociação')\r\n            })\r\n\r\n    }\r\n\r\n    apagar() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection).apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível apagar as negociações')\r\n            })\r\n    }\r\n\r\n    listar() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações')\r\n            })\r\n    }\r\n}"],"mappings":"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"}